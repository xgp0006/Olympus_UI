#!/bin/bash

# Pre-commit hook for NASA JPL compliance and performance validation
# Non-blocking mode - logs issues but doesn't prevent commits

YELLOW='\033[1;33m'
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${YELLOW}Running pre-commit validation...${NC}"

# Get staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx|svelte|js)$')

if [ -z "$STAGED_FILES" ]; then
    echo -e "${GREEN}No JavaScript/TypeScript files to validate${NC}"
    exit 0
fi

# Run validation in non-blocking mode
VALIDATION_LOG=".claude-orchestrator/logs/validation-$(date +%s).log"

# Type checking
echo "Type checking..."
npm run check 2>&1 | tee -a "$VALIDATION_LOG"

# NASA JPL compliance check (simplified)
echo "NASA JPL compliance check..."
for FILE in $STAGED_FILES; do
    # Check function length (max 60 lines)
    LONG_FUNCTIONS=$(awk '/function|=>|method/ {start=NR} /^}/ {if(NR-start>60) print FILENAME":"start" Function exceeds 60 lines"}' "$FILE")
    if [ ! -z "$LONG_FUNCTIONS" ]; then
        echo -e "${YELLOW}Warning: $LONG_FUNCTIONS${NC}" | tee -a "$VALIDATION_LOG"
    fi
    
    # Check for unbounded loops
    if grep -E "while\s*\(true\)|for\s*\(;\s*;" "$FILE" > /dev/null; then
        echo -e "${YELLOW}Warning: Potentially unbounded loop in $FILE${NC}" | tee -a "$VALIDATION_LOG"
    fi
done

# Performance check (144fps requirement)
echo "Performance validation..."
if [ -f "src/lib/map-features/shared/performance.ts" ]; then
    # Check for RAF usage in components
    for FILE in $STAGED_FILES; do
        if grep -q "requestAnimationFrame" "$FILE"; then
            echo -e "${GREEN}âœ“ $FILE uses RAF for animations${NC}" | tee -a "$VALIDATION_LOG"
        fi
    done
fi

# Log completion
echo -e "${GREEN}Pre-commit validation complete (non-blocking mode)${NC}"
echo "Full validation log: $VALIDATION_LOG"

# Always exit 0 in non-blocking mode
exit 0